<!--
  ~ Copyright (C) 2012-2016 Project Delphinium - All Rights Reserved
  ~
  ~ This file is subject to the terms and conditions defined in
  ~ file 'https://github.com/ProjectDelphinium/delphinium/blob/master/EULA',
  ~ which is part of this source code package.
  ~
  ~ NOTICE:  All information contained herein is, and remains the property of Project Delphinium. The intellectual and technical concepts contained
  ~ herein are proprietary to Project Delphinium and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained
  ~ from Project Delphinium.
  ~
  ~ THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS
  ~ TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.
  ~
  ~ Unauthorized copying of this file, via any medium is strictly prohibited
  ~ Non-commercial use only, you may not charge money for the software
  ~ You can modify personal copy of source-code but cannot distribute modifications
  ~ You may not distribute any version of this software, modified or otherwise
  -->

<!-- Instructor View with Settings cog -->
<div style="position:relative; z-index:950;">
    <a id="popinfo" title="Info" tabindex="0" role="button" data-trigger="focus" data-container="body" data-toggle="popover" data-placement="left" data-content="Setup below" style="position:absolute; top:0; right:0px;">
        <i class="icon-question"></i>
    </a>
	<div id="cog" data-toggle="modal" href="#content-configuration" data-trigger-action="enable" style="position:absolute; top:0; right:10px;">
		<a data-toggle="tooltip" title="Settings" data-placement="bottom"><i class="icon-cog"></i></a>
    </div>
</div>
<div style="z-index:10;">
    <!-- component partial -->
    <h3>Instructor view</h3>
</div>

<!-- Configuration modal with Front End Form and Instructions in tabs -->
<div class="control-popup modal fade" id="content-configuration" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="width:800px; overflow-y: auto;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Component Settings</h4>
            </div>
            <div class="modal-body">
                <!-- Tabs -->
                <ul class="nav nav-tabs">
                  <li class="active"><a data-toggle="tab" href="#configure">Configure</a></li>
                  <li><a data-toggle="tab" href="#instruct">Instructions</a></li>
                </ul>
                <div class="tab-content">
                <!-- Configure instance -->
                  <div id="configure" class="tab-pane fade in active" style="padding: 5px 0px;">
                    <form role="form" id="updateForm"
                      data-request="{{ __SELF__ }}::onUpdate"
                      data-request-success="$el.hide();completed(data);">
                        {{ form.update(recordId)|raw }}
                        {{ form.formRender()|raw }}
                      <div class="form-group">
                         <button class="btn btn-primary btn-block btn-md" type="submit" value="register">Update Component</button>
                      </div>
                    </form>
                  </div>
                <!-- Instructions -->
                  <div id="instruct" class="tab-pane fade in" style="padding: 0px 20px;">
                      {{ instructions|raw }}
                  </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
	/* set up the popover content text and activate it*/
	$('#popinfo').attr("data-content","Here is some amazing content. It's very engaging. Right?");
    $('#popinfo').popover();// activate info
	
    /* set id & course for the POST if they are hidden in fields.yaml
        Add hidden input fields so they will transfer to onUpdate
        if a field is set to hidden: true it does not appear in the form at all
        
        in Vanilla I only have id hidden
    */
    
    $('#Form-outsideTabs').append('<input type="hidden" name="Vanilla[id]" value="'+config.id+'" /> ');

    
	function completed(data)
	{
        /* updated record is returned in data */
        /* Flash a message then reload page 
        $.oc.flashMsg({
            'text': 'The record has been successfully saved.',
            'class': 'success',
            'interval': 3
        });*/
        location.reload();// wait for 3 sec?
	}
	console.log('instance: id='+config.id,config.name,config.custom,config.course_id);
</script>
